- @page_title = "#{Bananajour.config.name}&rsquo;s Bananajour"

%style{:type => "text/css"}
  :sass
    .people
      :font-size 14px
      a
        :color black
  
- if @my_repositories.empty?

  %h2 Add a project
  
  %pre
    :preserve
      $ cd ~/code/myproj
      $ bananajour init
      #{Bananajour.plain_init_success_message('myproj.git')}
      $ git push banana master
      Counting objects: 3, done.
      Writing objects: 100% (3/3), 229 bytes, done.
      Total 3 (delta 0), reused 3 (delta 0)
      Unpacking objects: 100% (3/3), done.
      To #{Bananajour.repositories_path.expand_path}/myproj.git
       * [new branch]      master -> master
      
- else

  %style{:type => "text/css"}
    :sass
      .repository
        :clear both
        :background-color white
        :-webkit-border-radius 10px
        :-moz-border-radius 10px
        :padding 7px 10px
        :margin 10px 0
        :position relative
        :border 4px solid #ff0
        
        a
          :color #888
        
        h2, p.uri
          :margin 0
          :display inline

        h2
          :color #333
          :font-size 24px
        p.uri
          :color #666
          :margin 5px 0
          :font-size 12px
        
        ul, li
          :margin 0
          :padding 0
          :list-style none
          
        p.readme
          :margin 0
          a
            :float right
            :margin 0
            :text-transform uppercase
            :font-size 10px
            :font-weight bold
            :color #999
            :background-color #eee
            :line-height 20px
            :padding 0 5px
            :text-decoration none
            :-webkit-border-radius 2px
            :-moz-border-radius 2px
            &:hover
              :color #666
              :background-color #ddd
          
        h3
          :margin 10px 0 0 0
          :font-size 12px
          :color #999
          :text-transform uppercase
        
        ul.network
          :margin-top 5px
          li
            :line-height 1.2em
            :min-height 16px
            &.loading
              :background transparent url('/loader.gif') no-repeat right center
            a.name
              :font-size 12px
              :font-weight bold
              :color #000
              :text-transform uppercase
            .message
              :font-size 12px
              :color #333
            .meta
              :font-size 12px
              :color #999
      
      img.gravatar
        :width 20px
        :height 20px
      
      .projects, .people
        :float left
        :width 48%
        :background-color #fff
        :border 4px solid #ff0
        :-webkit-border-radius 10px
        :-moz-border-radius 10px
        :margin-top 10px
        
        h2
          :margin 0
          :text-align center
          :font-size 16px
          :line-height 28px
          :background-color #ff0
          :color #960
          :text-transform uppercase
        
      .people
        :margin-left 10px
        
      .local .repository
        :border-color #980
    
  - for repository in @my_repositories
    - repository_id = repository.html_friendly_name
    .repository{:id => repository_id, 'data-name' => repository.name}

      - if repository.readme_file
        %p.readme
          %a{:href => "/#{repository.name}/readme"} Readme

      %h2
        &= repository.name

      %p.uri&= repository.uri

      - unless local?
        %ul.commits
          - for commit in repository.recent_commits
            %li
              - if head = commit.head(repository.grit_repo)
                %em.branch= head.name
              %img.gravatar{:src => commit.author.gravatar_uri}
              %p.message
                &= commit.short_message
                %span.meta
                  \~
                  &= time_ago_in_words(commit.committed_date).gsub("about ","")
                  ago by
                  &= commit.author
      - else
        %ul.network
          - for repo in @repository_browser.repositories_similar_to(repository)
            %li.loading{'data-json-uri' => repo.json_uri}
              %a.name{:href => "#{repo.person.uri}##{repo.html_friendly_name}"}= repo.person.name

  - if local?
    :javascript
      $(function() {
        $("ul.network li").each(function() {
          var repoLi = $(this);
          $.getJSON(repoLi.attr("data-json-uri") + "?callback=?", function(data) {
            repoLi.removeClass("loading");
            var lastCommit = data.recent_commits[0];
            $("<img class='gravatar'/>").attr("src", data.bananajour.gravatar).prependTo(repoLi);
            $("<span class='message'/>").text(lastCommit.message).appendTo(repoLi);
            $("<span class='meta'/>").
              append(" ~ " + lastCommit.committed_date_pretty + " by " + lastCommit.author.name).
              appendTo(repoLi);
          });
        });
      });
    
    .projects
      - if @repos_by_name.empty?
        %h2 No other projects
      - else
        %h2= pluralize @repos_by_name.length, "Other Project", "Other Projects"
        %ul
          - for repo_name in @repos_by_name.keys.sort
            %li
              &= repo_name
              %ul
                - for repo in @repos_by_name[repo_name].sort_by {|r| r.person.name}
                  %li
                    %img.gravatar{:src => repo.person.gravatar}
                    &= repo.person.name
    .people
      - if @people.empty?
        %h2 No other bananas
      - else
        %h2= pluralize @people.length, "Other Banana", "Other Bananas"
        %ul
          - for person in @people
            %li
              %img.gravatar{:src => person.gravatar}
              &= person.name
              %ul
                - for repo in @repos_by_person_uri[person.uri]
                  %li
                    %a{:href => repo.web_uri}&= repo.name