- @page_title = "#{Bananajour.config.name}&rsquo;s Bananajour"

%style{:type => "text/css"}
  :sass
    .people
      :font-size 14px
      a
        :color black
  
- if @my_repositories.empty?

  %h2 Add a project
  
  %pre
    :preserve
      $ cd ~/code/myproj
      $ bananajour init
      #{Bananajour.plain_init_success_message('myproj.git')}
      $ git push banana master
      Counting objects: 3, done.
      Writing objects: 100% (3/3), 229 bytes, done.
      Total 3 (delta 0), reused 3 (delta 0)
      Unpacking objects: 100% (3/3), done.
      To #{Bananajour.repositories_path.expand_path}/myproj.git
       * [new branch]      master -> master
      
- else

  %style{:type => "text/css"}
    :sass
      ul.toc
        :float right
        :font-size 14px
        :line-height 1.3
        :margin -30px 0 0.3em 14em
        :opacity 0.5
        :text-align right
        :width auto
          
      ul.toc li
        :display inline
        :list-style-type none
         
        a
          :color #000
          :font-weight 700
      
      .repository
        :clear both
        :background-color white
        :-webkit-border-radius 10px
        :-moz-border-radius 10px
        :padding 7px 10px
        :margin 10px 0
        :position relative
        :border 4px solid #ff0
        
        a
          :color #888
        
        h2
          :margin 0 0 5px 0
          :color #333
          :font-size 24px
          
          span.branches
            :font-size 14px
            :color #666
        
        h3
          :font-size 12px
          :color #666
          :margin 5px 0
          
        p.extra
          :margin 5px 0
          :padding 0
          :font-size 12px
          &, a
            :color #888
          span, a
            :margin-right 0.5em

        p.network
          :font-size 12px
          :margin 5px 0
          &, a
            :color #888
          
        p.heads
          :margin-right 10px
        
        ul, li
          :margin 0
          :padding 0
          :list-style none
        
      .local .repository
        :border-color #980
      #remotes
        :margin 20px 0 0 0
        .repository
          :border-color #ff0
      #remotes hr
        :border 1px solid #c8ae08
        :margin 0 auto 20px auto
        :width 50%
      .hidden
        :display none
    
  - if @my_repositories.length > 1
    %ul.toc
      %li Repos:
      - for repository in @my_repositories
        %li.repo
          %a{:href => "##{repository.html_friendly_name}"}&= repository.name

  - for repository in @my_repositories
    - repository_id = repository.html_friendly_name
    .repository{:id => repository_id, 'data-name' => repository.name}

      %h2
        %span.name&= repository.name
        %span.branches
          = repository.grit_repo.heads.collect {|h| h.name}.join(" ")

      %p.extra
        %span.uri&= repository.uri
        - if repository.readme_file
          %a.readme{:href => "/#{repository.name}/readme"} Readme
        - if local?
          %a.toggle_commits{:href => "#"} Show More Commits

      %ul.commits.off
        - for commit in repository.recent_commits
          %li{"data-commit-id" => commit.id}
            - if head = commit.head(repository.grit_repo)
              %em.branch= head.name
            %img.gravatar{:src => commit.author.gravatar_uri}
            %p.message
              &= commit.short_message
              %span.meta{:id => "git#{commit.id}"}
                \~
                &= time_ago_in_words(commit.committed_date).gsub("about ","")
                ago by
                &= commit.author
                
      - unless (network_repositories = Bananajour.network_repositories_similar_to(repository)).empty?
        %p.network
          %strong
            Network (
            %a{:href => "/#{repository.name}/network-activity"}monitor
            ):
          - for nr in network_repositories
            %a{:href => "#{nr.person.uri}##{nr.html_friendly_name}"}= nr.person.name

  - if local?  
    #remotes
      %hr
      - for repository_name in @uncloned_repository_names
        .repository
          %h2
            %span.name&= repository_name

          %p.network
            - for nr in @uncloned_repositories.select { |dnr| dnr.name == repository_name }
              %a{:href => "#{nr.person.uri}##{nr.html_friendly_name}"}= nr.person.name

- if (Bananajour.other_people != [])
  .people
    %p
      Other bananas:
      = Bananajour.other_people.map { |p| "<a href=\"#{p.uri}\">#{p.name}</a>" }.join(', ')

:javascript
  $("ul.commits li:not(:first-child)").hide();
  
  $('.repository .toggle_commits').live("click", function(event) {
    event.preventDefault();
    var link = $(this);
    var commits = link.parents('.repository').find("ul.commits li:not(:first-child)");
    var commitList = link.parents('.repository').find("ul.commits");
    if (commitList.hasClass("off")) {
      commitList.removeClass("off");
    } else {
      commitList.addClass("off");
    }
    commits.toggle();      
    commits.is(":visible") ? link.text("Show Less Commits") : link.text("Show More Commits");
  });
  
  $('.commits li').live("click", function(event){
    var target = $(event.target);
    var commitLine = target.is('li') ? target : target.parents('li');
    var commitId = commitLine.attr('data-commit-id');
    var repoName = commitLine.parents('.repository').attr('data-name');
    window.location = '/' + repoName + '/' + commitId;
  });
  
  $(setInterval(banana.getData, 9000));
